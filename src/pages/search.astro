---
import Layout from '@layouts/Default.astro';
import { Card } from '@eliancodes/brutal-ui';

interface SearchResult {
  slug: string;
  title: string;
  description: string;
  tags: string[];
}
---

<Layout
  title="Search"
  description="Search through all reviews and articles"
  pageTitle="Search"
>
  <main class="min-h-screen bg-purple p-6">
    <div class="max-w-3xl mx-auto">
      <Card>
        <div class="p-4">
          <input
            type="text"
            id="search-input"
            placeholder="Search any article..."
            class="w-full px-4 py-2 text-lg border-2 border-black rounded-lg focus:outline-none focus:ring-2 focus:ring-black"
          />
          <div id="search-results" class="mt-6 space-y-4">
            <!-- Results will be populated here -->
          </div>
        </div>
      </Card>
    </div>
  </main>
</Layout>

<script>
  import Fuse from 'fuse.js';

  interface SearchResult {
    slug: string;
    title: string;
    description: string;
    tags: string[];
  }

  let fuse: Fuse<SearchResult>;

  async function initSearch() {
    const response = await fetch('/api/search-index');
    const posts: SearchResult[] = await response.json();
    
    fuse = new Fuse(posts, {
      keys: ['title', 'description', 'tags'],
      threshold: 0.4,
      includeMatches: true
    });

    const searchInput = document.getElementById('search-input') as HTMLInputElement;
    const searchResults = document.getElementById('search-results');

    if (!searchInput || !searchResults) return;

    searchInput.addEventListener('input', (e) => {
      const target = e.target as HTMLInputElement;
      const results = fuse.search(target.value);

      if (!target.value) {
        searchResults.innerHTML = '';
        return;
      }

      const html = results
        .map(({ item }) => `
          <article class="p-4 border-2 border-black rounded-lg hover:bg-gray-50 transition-colors">
            <a href="/blog/${item.slug}/" class="block">
              <h2 class="text-xl font-bold mb-2">${item.title}</h2>
              <p class="text-gray-600">${item.description}</p>
              <div class="mt-2 flex gap-2 flex-wrap">
                ${item.tags.map(tag => `
                  <span class="px-2 py-1 text-sm border border-black rounded-full">
                    ${tag}
                  </span>
                `).join('')}
              </div>
            </a>
          </article>
        `)
        .join('');

      searchResults.innerHTML = html || '<p class="text-center text-gray-500">No results found</p>';
    });
  }

  // Initialize on page load
  initSearch();
</script> 